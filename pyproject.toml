[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mite_extras"
version = "1.3.0"
description = "Parsing, conversion, and validation functionality for Minimum Information about a Tailoring Enzyme (MITE) files."
readme = "README.md"
requires-python = ">=3.12"
license-files = { paths = ["LICENSE"] }
authors = [
    { name = "Mitja M. Zdouc", email = "zdoucmm@gmail.com" },
    { name = "Adriano Rutz", email = "adafede@gmail.com" }
]
keywords = [
    "cheminformatics",
    "genomics"
]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry"
]
dependencies = [
    "argparse~=1.4",
    "coloredlogs~=15.0",
    "jsonschema~=4.23",
    "mite-schema==1.6.0",
    "pydantic~=2.8",
    "rdkit~=2024.3",
    "referencing~=0.35",
    "requests~=2.32",
]

[project.urls]
Homepage = "https://github.com/mite-standard/mite_extras"
Issues = "https://github.com/mite-standard/mite_extras/issues"

[project.scripts]
mite_extras = "mite_extras.main:main_cli"

[project.optional-dependencies]
dev = [
    "pre-commit~=3.4",
    "pytest~=7.4",
    "ruff~=0.5"
]

[tool.hatch.envs.dev]
features = [
    "dev"
]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.idea/",
  "/.github/",
  "/.git/",
  "/.pytest_cache/",
  "/.ruff_cache/",
  "/.venv",
  "/tests/",
  "/.gitignore",
  "/.pre-commit-config.yaml",
  "/CODE_OF_CONDUCT.md",
  "/CONTRIBUTING.md"
]

[tool.hatch.build.targets.wheel]
packages = ["src/mite_extras"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
pythonpath = [
    "src/mite_extras"
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-eradicate/eradicate
    "ERA",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-pie
    "PIE",
    # pygrep
    "PGH",
    # ruff checks
    "RUF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
]
ignore = [
    # whitespace-before-punctuation
    "E203",
    # percent-format-invalid-format
    "E501",
    # mixed-case-variable-in-class-scope
    "N815",
    # needless-boool
    "SIM103"
]